[project]
# Project metadata for Unified Sales Framework
name = "unified-sales-framework"
description = "Unified Sales Agent Framework - Combining Multi-Agent AI System with ADK Infrastructure"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [
  { name = "Unified Sales Framework Team", email = "team@unified-sales-framework.com" }
]
classifiers = [
  "Typing :: Typed",
  "Intended Audience :: Developers",
  "Intended Audience :: Business",
  "Intended Audience :: Sales and Marketing",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Office/Business :: Sales",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "License :: OSI Approved :: Apache Software License",
]
dependencies = [
  # Core ADK dependencies
  "google-adk>=1.0.0",                               # Base ADK framework
  "authlib>=1.5.1",                                  # For RestAPI Tool
  "click>=8.1.8",                                    # For CLI tools
  "fastapi>=0.115.0",                                # FastAPI framework
  "google-api-python-client>=2.157.0",               # Google API client discovery
  "google-cloud-aiplatform[agent_engines]>=1.95.1", # For VertexAI integrations
  "google-cloud-secret-manager>=2.22.0",             # Fetching secrets in RestAPI Tool
  "google-cloud-speech>=2.30.0",                     # For Audio Transcription
  "google-cloud-storage>=2.18.0, <3.0.0",           # For GCS Artifact service
  "google-genai>=1.17.0",                            # Google GenAI SDK
  "graphviz>=0.20.2",                                # Graphviz for graph rendering
  "mcp>=1.8.0;python_version>='3.10'",               # For MCP Toolset
  "opentelemetry-api>=1.31.0",                       # OpenTelemetry
  "opentelemetry-exporter-gcp-trace>=1.9.0",
  "opentelemetry-sdk>=1.31.0",
  "pydantic>=2.0, <3.0.0",                           # For data validation/models
  "python-dotenv>=1.0.0",                            # To manage environment variables
  "PyYAML>=6.0.2",                                   # For APIHubToolset and configs
  "sqlalchemy>=2.0",                                 # SQL database ORM
  "tzlocal>=5.3",                                    # Time zone utilities
  "uvicorn>=0.34.0",                                 # ASGI server for FastAPI
  
  # Sales-specific dependencies
  "jinja2>=3.1.0",                                   # Template engine for agent generation
  "chromadb>=0.4.0",                                 # Vector database for knowledge
  "sentence-transformers>=2.2.0",                    # Embeddings for knowledge base
  "pandas>=2.0.0",                                   # Data analysis for sales metrics
  "plotly>=5.0.0",                                   # Visualization for sales dashboards
  "requests>=2.31.0",                                # HTTP requests for API integrations
  "beautifulsoup4>=4.12.0",                          # Web scraping for lead research
  "stripe>=7.0.0",                                   # Payment processing integration
  "salesforce-api>=0.1.0",                           # CRM integration
]
dynamic = ["version"]

[project.urls]
homepage = "https://unified-sales-framework.com"
repository = "https://github.com/unified-sales-framework/unified-sales-framework"
documentation = "https://docs.unified-sales-framework.com"
changelog = "https://github.com/unified-sales-framework/unified-sales-framework/blob/main/CHANGELOG.md"

[project.scripts]
uaf = "unified_sales_framework.cli:main"

[project.optional-dependencies]

dev = [
  "flit>=3.10.0",
  "isort>=6.0.0",
  "pyink>=24.10.0",
  "pylint>=2.6.0",
  "mypy>=1.15.0",
  "pre-commit>=3.0.0",
  "black>=23.0.0",
]

test = [
  "anthropic>=0.43.0",               # For anthropic model tests
  "langchain-community>=0.3.17",
  "langgraph>=0.2.60",               # For LangGraphAgent
  "litellm>=1.71.2",                # For LiteLLM tests
  "llama-index-readers-file>=0.4.0", # For retrieval tests
  "pytest-asyncio>=0.25.0",
  "pytest-mock>=3.14.0",
  "pytest-xdist>=3.6.1",
  "pytest>=8.3.4",
  "pytest-cov>=4.0.0",              # Coverage testing
]

sales = [
  "hubspot-api-client>=8.0.0",       # HubSpot CRM integration
  "pipedrive-python-lib>=5.0.0",     # Pipedrive CRM integration
  "mailchimp3>=3.0.0",               # Email marketing integration
  "twilio>=8.0.0",                   # SMS/WhatsApp integration
  "slack-sdk>=3.0.0",                # Slack integration
  "zapier-platform-cli>=15.0.0",     # Zapier automation
]

analytics = [
  "google-analytics-data>=0.17.0",   # Google Analytics integration
  "mixpanel>=4.10.0",                # Mixpanel analytics
  "amplitude-analytics>=1.0.0",      # Amplitude analytics
  "segment-analytics-python>=2.0.0", # Segment analytics
]

deployment = [
  "docker>=7.0.0",                   # Container deployment
  "kubernetes>=28.0.0",              # Kubernetes deployment
  "terraform>=1.0.0",                # Infrastructure as code
  "ansible>=8.0.0",                  # Configuration management
]

# Optional extensions for specialized sales tools
extensions = [
  "anthropic>=0.43.0",                    # For anthropic model support
  "crewai[tools];python_version>='3.10'", # For CrewaiTool
  "docker>=7.0.0",                        # For ContainerCodeExecutor
  "langgraph>=0.2.60",                    # For LangGraphAgent
  "litellm>=1.63.11",                     # For LiteLLM support
  "llama-index-readers-file>=0.4.0",      # For retrieval using LlamaIndex
  "lxml>=5.3.0",                          # For web scraping tools
  "selenium>=4.0.0",                      # For advanced web automation
  "scrapy>=2.11.0",                       # For lead research automation
]

[tool.pyink]
# Format py files following Google style-guide
line-length = 80
unstable = true
pyink-indentation = 2
pyink-use-majority-quotes = true
pyink-annotation-pragmas = [
  "noqa",
  "pylint:",
  "type: ignore",
  "pytype:",
  "mypy:",
  "pyright:",
  "pyre-",
]

[build-system]
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
include = ['src/**/*', 'README.md', 'pyproject.toml', 'LICENSE']
exclude = ['src/**/*.sh', 'tests/**/*']

[tool.flit.module]
name = "unified_sales_framework"
include = ["py.typed"]

[tool.isort]
profile = "google"
single_line_exclusions = []
known_third_party = ["unified_sales_framework", "google.adk"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
addopts = "--cov=src --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
exclude = "tests/"
plugins = ["pydantic.mypy"]
disable_error_code = ["import-not-found", "import-untyped", "unused-ignore"]
follow_imports = "skip"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
]

