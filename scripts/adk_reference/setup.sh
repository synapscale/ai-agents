#!/bin/bash
# Script de instala√ß√£o e configura√ß√£o completa do ADK Python

set -e

echo "üöÄ INSTALA√á√ÉO E CONFIGURA√á√ÉO DO ADK PYTHON"
echo "=========================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para logging
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "pyproject.toml" ]; then
    log_error "Execute este script no diret√≥rio raiz do projeto ADK Python"
    exit 1
fi

# 1. Verificar Python
log_info "Verificando vers√£o do Python..."
PYTHON_VERSION=$(python3 --version 2>&1 | awk '{print $2}' | cut -d. -f1,2)
REQUIRED_VERSION="3.9"

if python3 -c "import sys; exit(0 if sys.version_info >= (3,9) else 1)"; then
    log_success "Python $PYTHON_VERSION encontrado (>= 3.9 requerido)"
else
    log_error "Python 3.9+ √© necess√°rio. Vers√£o atual: $PYTHON_VERSION"
    exit 1
fi

# 2. Instalar depend√™ncias principais
log_info "Instalando depend√™ncias principais..."
if python3 -m pip install -e . --quiet; then
    log_success "Depend√™ncias principais instaladas"
else
    log_error "Falha ao instalar depend√™ncias principais"
    exit 1
fi

# 3. Instalar depend√™ncias dos tutoriais
log_info "Instalando depend√™ncias dos tutoriais..."
if [ -f "config/requirements-tutorial.txt" ]; then
    if python3 -m pip install -r config/requirements-tutorial.txt --quiet; then
        log_success "Depend√™ncias dos tutoriais instaladas"
    else
        log_warning "Algumas depend√™ncias dos tutoriais podem ter falhado"
    fi
else
    log_warning "Arquivo requirements-tutorial.txt n√£o encontrado"
fi

# 4. Configurar PYTHONPATH
log_info "Configurando PYTHONPATH..."
export PYTHONPATH="$(pwd)/src:$PYTHONPATH"
log_success "PYTHONPATH configurado para esta sess√£o"

# 5. Verificar estrutura do reposit√≥rio
log_info "Verificando estrutura do reposit√≥rio..."
if python3 scripts/verificar_reorganizacao.py >/dev/null 2>&1; then
    log_success "Estrutura do reposit√≥rio verificada"
else
    log_warning "Estrutura do reposit√≥rio pode precisar de ajustes"
fi

# 6. Executar testes b√°sicos
log_info "Executando testes de verifica√ß√£o..."
if python3 scripts/test_installation.py >/dev/null 2>&1; then
    log_success "Testes de instala√ß√£o passaram"
else
    log_warning "Alguns testes de instala√ß√£o falharam (isso pode ser normal)"
fi

# 7. Criar arquivo de ambiente local
log_info "Criando arquivo de configura√ß√£o local..."
cat >.env.local <<'EOF'
# Configura√ß√£o local do ADK Python
export PYTHONPATH="$(pwd)/src:$PYTHONPATH"
export ADK_DEV_MODE=true
export ADK_LOG_LEVEL=INFO

# Aliases √∫teis
alias adk-test="make test"
alias adk-demo="make demo"
alias adk-format="make format"
alias adk-check="make check"
alias adk-help="make help"

echo "üîß Ambiente ADK carregado! Use 'adk-help' para ver comandos dispon√≠veis"
EOF

log_success "Arquivo .env.local criado"

# 8. Verificar se Makefile funciona
log_info "Testando Makefile..."
if make help >/dev/null 2>&1; then
    log_success "Makefile funcionando corretamente"
else
    log_warning "Makefile pode ter problemas"
fi

# 9. Resumo final
echo ""
echo "üéâ INSTALA√á√ÉO CONCLU√çDA!"
echo "======================="
log_success "Depend√™ncias instaladas"
log_success "Estrutura verificada"
log_success "Configura√ß√£o local criada"

echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "-------------------"
echo "1. Execute: source .env.local"
echo "2. Execute: make help (para ver comandos dispon√≠veis)"
echo "3. Execute: make demo (para testar uma demonstra√ß√£o)"
echo "4. Execute: make test (para executar testes)"
echo ""

echo "üìö COMANDOS √öTEIS:"
echo "------------------"
echo "‚Ä¢ make demo      - Executa demonstra√ß√£o pr√°tica"
echo "‚Ä¢ make test      - Executa todos os testes"
echo "‚Ä¢ make format    - Formata c√≥digo"
echo "‚Ä¢ make check     - Verifica estrutura"
echo "‚Ä¢ make notebook  - Abre Jupyter notebooks"
echo ""

log_info "Para configurar o ambiente, execute: source .env.local"
log_info "Consulte ESTRUTURA.md para detalhes da organiza√ß√£o"

echo "‚ú® Bom desenvolvimento!"
